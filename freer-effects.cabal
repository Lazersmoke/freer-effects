name:                   freer-effects
version:                0.4.0.0
synopsis:               Implementation of effect system for Haskell.
description:            Implementation of effect system for Haskell (actively maintained fork of
                        <http://hackage.haskell.org/package/freer-effects freer-effects>), which is based on the
                        work of Oleg Kiselyov et al.:
                        .
                        * <http://okmij.org/ftp/Haskell/extensible/more.pdf Freer Monads, More Extensible Effects>
                        .
                        * <http://okmij.org/ftp/Haskell/zseq.pdf Reflection without Remorse>
                        .
                        * <http://okmij.org/ftp/Haskell/extensible/exteff.pdf Extensible Effects>
                        .
                        The key features are:
                        .
                        * An efficient effect system for Haskell - as a library!
                        .
                        * Reimplementations of several common Haskell monad transformers as effects.
                        .
                        * Core components for defining your own Effects.
license-file:           LICENSE
tested-with:            GHC==8.0.2, GHC==8.0.1, GHC==7.10.3, GHC==7.8.4
category:               Control
homepage:               https://github.com/Lazersmoke/freer-effects#readme
bug-reports:            https://github.com/Lazersmoke/freer-effects/issues
author:                 Allele Dev, Ixcom Core Team, Sam Quinn, and other contributors
maintainer:             lazersmoke@gmail.com
copyright:              (c) 2016 Allele Dev; 2017 Ixperta Solutions s.r.o.; 2017 Sam Quinn
license:                BSD3
build-type:             Simple
cabal-version:          >= 1.10

extra-source-files:
    README.md

source-repository head
  type: git
  location: https://github.com/Lazersmoke/freer-effects

library
  hs-source-dirs: src
  ghc-options: -Wall -Werror
  build-depends: base >=4.7 && <5
  exposed-modules:
      Control.Monad.Freer
      Control.Monad.Freer.Coroutine
      Control.Monad.Freer.Cut
      Control.Monad.Freer.Exception
      Control.Monad.Freer.Fresh
      Control.Monad.Freer.NonDet
      Control.Monad.Freer.Reader
      Control.Monad.Freer.State
      Control.Monad.Freer.StateRW
      Control.Monad.Freer.Trace
      Control.Monad.Freer.Writer
      Data.FTCQueue
      Data.OpenUnion
  default-language: Haskell2010

executable freer-examples
  main-is: Main.hs
  hs-source-dirs:
      examples/src
  ghc-options: -Wall -Werror
  build-depends:
      base >=4.7 && <5
    , freer-effects
  other-modules:
      Capitalize
      Console
      Coroutine
      Cut
      Fresh
      Trace
  default-language: Haskell2010

test-suite unit
  type: exitcode-stdio-1.0
  main-is: Tests.hs
  hs-source-dirs:
      tests
  ghc-options: -Wall -Werror
  build-depends:
  build-depends: base >= 4.7 && < 5, hspec, freer-effects, QuickCheck
  other-modules:
      Tests.Coroutine
      Tests.Exception
      Tests.Fresh
      Tests.Loop
      Tests.NonDet
      Tests.Reader
      Tests.State
  default-language: Haskell2010
